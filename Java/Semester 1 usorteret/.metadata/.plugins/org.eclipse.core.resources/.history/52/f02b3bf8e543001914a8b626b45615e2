package opgave;

import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.geometry.VPos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

public class Opgave3_vindue2 extends Stage {
	public Opgave3_vindue2(String title, Stage owner) {
		this.initOwner(owner);
		this.initStyle(StageStyle.UTILITY);
		this.initModality(Modality.APPLICATION_MODAL);
		this.setMinHeight(100);
		this.setMinWidth(200);
		this.setResizable(false);

		this.setTitle(title);
		GridPane pane = new GridPane();
		this.initContent(pane);

		Scene scene = new Scene(pane);
		this.setScene(scene);
	}

	// -------------------------------------------------------------------------
	private TextField txfName;
	private TextField txfTitle;
	private CheckBox checkBox;


	private void initContent(GridPane pane) {
		// pane.setGridLinesVisible(true);
		pane.setPadding(new Insets(20));
		pane.setHgap(10);
		pane.setVgap(10);

		Label lblName = new Label("Name:");
		pane.add(lblName, 0, 0);

		Label lblTitle = new Label("Title:");
		pane.add(lblTitle, 0, 1);

		checkBox = new CheckBox();
		checkBox.setText("Senior");
		pane.add(checkBox, 1, 2);

		txfName = new TextField();
		pane.add(txfName, 1, 0);

		txfTitle = new TextField();
		pane.add(txfTitle, 1, 1);

	// -------------------------------------------------------------------------

	// -------------------------------------------------------------------------
	// Button actions

	private void cancelAction() {
		txfTitle.clear();
		txfTitle.requestFocus();
		txfActor.clear();
		actualMovie = null;
		MovieInputWindow.this.hide();
	}

	private void okAction() {
		String title = txfTitle.getText().trim();
		String actor = txfActor.getText().trim();

		if (title.length() > 0 && actor.length() > 0) {
			actualMovie = new Movie(title, actor);
			txfTitle.clear();
			txfActor.clear();
			txfTitle.requestFocus();
			MovieInputWindow.this.hide();
		} else {
			Alert alert = new Alert(AlertType.INFORMATION);
			alert.setTitle("Create movie");
			alert.setHeaderText("Information missing");
			alert.setContentText("Type title and actor");
			alert.show();
		}

	}

	public Movie getActualMovie() {
		return actualMovie;
	}

	public void clearActualMovie() {
		actualMovie = null;
	}

}
